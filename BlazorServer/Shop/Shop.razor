@inject IJSRuntime js
@inject ShopService shopService

<div class="container">
    <div class="row">
        <section class="col-3">
            <h5 class="text-warning ml-3">Sort</h5>
            <select class="custom-select my-3">
                <option selected>Alphabetical</option>
                <option>Price: Low to High</option>
                <option>Price: High to Low</option>
            </select>
            <h5 class="text-warning ml-3">Brands</h5>
            <ul class="list-group my-3">
                @if (productBrands != null)
                    @foreach (var brand in productBrands)
                    {
                        <li class="list-group-item">@brand.Name</li>
                    }
            </ul>
            <h5 class="text-warning ml-3">Types</h5>
            <ul class="list-group my-3">
                @if (productTypes != null)
                    @foreach (var type in productTypes)
                    {
                        <li class="list-group-item">@type.Name</li>
                    }
            </ul>
        </section>
        <section class="col-9">
            <div class="d-flex justify-content-between align-items-center pb-2">
                <header>
                    <span>Showing <strong>10</strong> of <strong>15</strong> Results</span>
                </header>
                <div class="form-inline mt-2">
                    <input type="text"
                           class="form-control mr-2"
                           style="width: 300px;"
                           placeholder="Search..." />
                    <button class="btn btn-outline-primary my-2">Search</button>
                    <button class="btn btn-outline-success my-2 ml-2">Reset</button>
                </div>
            </div>
            <div class="row">
                @if (products != null)
                {
                    @foreach (var product in products)
                    {
                        <div class="col-4 mb-4">
                            <ProductItem Product="product" />
                        </div>
                    }
                }
            </div>
        </section>
    </div>
</div>

@code {
    List<Product> products;
    List<ProductBrand> productBrands;
    List<ProductType> productTypes;

    protected override async Task OnInitializedAsync()
    {
        var pagination = await shopService.GetProducts();
        products = pagination.Data;

        productBrands = await shopService.GetProductBrands();
        productTypes = await shopService.GetProductTypes();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await js.InvokeVoidAsync("log", products);
            await js.InvokeVoidAsync("log", productBrands);
            await js.InvokeVoidAsync("log", productTypes);
        }
    }
}